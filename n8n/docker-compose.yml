version: '3.8'

volumes:
  db_storage:
  n8n_storage:
  qdrant_storage:

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    ports:
      - "5431:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - N8N_SECURE_COOKIE=false
#      - WEBHOOK_URL=https://n8n.yourdomain.com/
      - N8N_CUSTOM_EXTENSIONS=/home/node/custom-nodes # Tell n8n where to find custom nodes
      - OLLAMA_HOST=host.docker.internal:11434
    ports:
      - "5678:5678"
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n-custom-nodes:/home/node/custom-nodes # Mount your custom node folder
    depends_on:
      postgres:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant:v1.13.4
#    restart: always
    ports:
      - "6333:6333" # REST API
#      - "6334:6334" # gRPC API
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
        - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
